version: '2'
services:

  portfolio-redis:
    image: redis:5.0-alpine
    container_name: portfolio-redis
    volumes:
      - ./dockerdata/redis/data:/data
    networks:
      - portfolionet
    restart: always
    command: redis-server --appendonly yes

#  portfolio-elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
#    container_name: portfolio-elasticsearch
#    environment:
#      - cluster.name=portfolio-docker-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - TAKE_FILE_OWNERSHIP=1
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    mem_limit: 1g
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - ./dockerdata/es/esdata1:/usr/share/elasticsearch/data
#    networks:
#      - portfolionet
#    restart: always
#  portfolio-elasticsearch-2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
#    container_name: portfolio-elasticsearch-2
#    environment:
#      - cluster.name=portfolio-docker-cluster
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - TAKE_FILE_OWNERSHIP=1
#      - discovery.zen.ping.unicast.hosts=portfolio-elasticsearch
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#      nofile:
#        soft: 65536
#        hard: 65536
#    mem_limit: 1g
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - ./dockerdata/es/esdata2:/usr/share/elasticsearch/data
#    networks:
#      - portfolionet
#    restart: always
#
#  portfolio-elasticsearch-curator:
#    build: ./docker/elasticsearch-curator
#    container_name: portfolio-elasticsearch-curator
#    volumes:
#      - ./docker/elasticsearch-curator/config/curator.yml:/config/curator.yml
#      - ./docker/elasticsearch-curator/actions:/actions
#    networks:
#      - portfolionet
#    entrypoint: |
#        bash -c 'bash -s <<EOF
#        trap "break;exit" SIGHUP SIGINT SIGTERM
#        while /bin/true; do
#          /usr/local/bin/curator --config /config/curator.yml /actions/close_indices.yml
#          sleep 43200
#        done
#        EOF'
#    restart: always
#
#  portfolio-logstash:
#    image: docker.elastic.co/logstash/logstash:6.4.0
#    container_name: portfolio-logstash
#    expose:
#      - "5228"
#      - "5229"
#    volumes:
#      - ./docker/logstash/:/usr/share/logstash/pipeline/
#      - ./logs/logstash:/usr/share/logstash/logs
#    networks:
#      - portfolionet
#    restart: always
#
#  portfolio-kibana:
#    image: docker.elastic.co/kibana/kibana:6.4.0
#    container_name: portfolio-kibana
#    environment:
#      - SERVER_BASEPATH=/kibana
#    links:
#      - portfolio-elasticsearch:elasticsearch
#    networks:
#      - portfolionet
#    restart: always

  portfolio-postgres:
    image: postgres:11.1-alpine
    container_name: portfolio-postgres
    environment:
      - POSTGRES_PASSWORD=$PORTFOLIO_DB_PASSWORD
      - POSTGRES_USER=$PORTFOLIO_DB_USER
      - POSTGRES_DB=$PORTFOLIO_DB_NAME
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./dockerdata/postgres/11/data:/var/lib/postgresql/data/pgdata
    networks:
      - portfolionet
    restart: always

  portfolio-django:
    build: ./src
    container_name: portfolio-django
    environment:
      - POSTGRES_PASSWORD=$PORTFOLIO_DB_PASSWORD
      - POSTGRES_USER=$PORTFOLIO_DB_USER
      - POSTGRES_DB=$PORTFOLIO_DB_NAME
    expose:
      - 8200
    volumes:
      - ./src:/django
      - ./logs:/logs
      - ./dockerdata/dms/assets:/django/assets
    networks:
      - portfolionet
    restart: always

  portfolio-rq:
    build: ./src
    container_name: portfolio-rq
    volumes_from:
      - portfolio-django
    command: python manage.py rqworker high default

  portfolio-rq-scheduler:
    build: ./src
    container_name: portfolio-rq-scheduler
    volumes_from:
      - portfolio-django
    command: python manage.py rqscheduler

networks:
  portfolionet:
