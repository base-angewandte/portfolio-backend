import logging
from json import dumps, loads

import requests

from django.conf import settings
from django.template import loader

from core.models import Entry
from media_server.models import AUDIO_TYPE, DOCUMENT_TYPE, IMAGE_TYPE, VIDEO_TYPE, Media, get_media_for_entry


class Archiver:
    def __init__(self):
        self.uris = settings.ARCHIVE_URIS
        self.credentials = settings.ARCHIVE_CREDENTIALS

    def archive(self, media):
        if settings.ARCHIVE_TYPE == 'PHAIDRA':
            return self.phaidra_archive(media)

    def phaidra_archive(self, media):
        # Find associated entry object for this asset
        entry = Entry.objects.get(id=media.entry_id)

        # if the entry is not already archived as a container, create a container object
        if not entry.archive_id:
            template = loader.get_template('phaidra_container.json')
            context = {'entry': entry}

            # Cannot use json.loads because there is a trailing comma after last element
            # that is generated by template rendering
            container_metadata = eval(template.render(context))
            res = requests.post(
                self.uris.get('CREATE_URI'),
                files={'metadata': dumps(container_metadata)},
                auth=(self.credentials.get('USER'), self.credentials.get('PWD')),
            )

            #
            if res.status_code != 200:
                logging.warning('Response:\nStatus: %s\nContent: %s', res.status_code, res.content)
                return res

            pid = loads(res.content).get('pid', '')
            if pid.strip():
                entry.archive_URI = self.uris.get('BASE_URI') + pid
                entry.archive_id = pid
                entry.save()

        # Create a media object separately
        if media.type == IMAGE_TYPE:
            post_url = self.uris.get('PICTURE_CREATE')
        elif media.type == AUDIO_TYPE:
            post_url = self.uris.get('AUDIO_CREATE')
        elif media.type == VIDEO_TYPE:
            post_url = self.uris.get('VIDEO_CREATE')
        elif media.type == DOCUMENT_TYPE:
            post_url = self.uris.get('DOCUMENT_CREATE')
        else:
            # TODO: Can this have a file?
            post_url = self.uris.get('OBJECT_CREATE')

        # res = requests.post(
        #     post_url,
        #     files={'file': media.file, 'metadata': json.dumps(metadata)},
        #     auth=(settings.PHAIDRA_USER, settings.PHAIDRA_PWD),
        # )

        # if res.status_code != 200:
        #     logging.warning('Response:\nStatus: %s\nContent: %s', res.status_code, res.content)
        #     return res

        # pid = loads(res.content).get('pid', '')

        # # Add the media object to the container
        # PHAIDRA_ADD_MEMBER_URI = f'{self.uris.get("BASE_URI")}/object/{entry.archive_id}/relationship/add'

        # print(PHAIDRA_ADD_MEMBER_URI)
        # # return data (for debugging only)

        return {'pid': entry.archive_id}
