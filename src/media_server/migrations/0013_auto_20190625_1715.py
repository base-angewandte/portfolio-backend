# Generated by Django 2.2.2 on 2019-06-25 15:15
import os
import shutil

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.core.files.base import ContentFile
from django.db import migrations, models
import django.db.models.deletion
import general.models
import jsonfield.encoder
import jsonfield.fields
import media_server.models
import media_server.storages
import media_server.validators


def forwards_func(apps, schema_editor):
    # We get the models from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    Audio = apps.get_model('media_server', 'Audio')
    Document = apps.get_model('media_server', 'Document')
    Image = apps.get_model('media_server', 'Image')
    Other = apps.get_model('media_server', 'Other')
    Video = apps.get_model('media_server', 'Video')

    Media = apps.get_model('media_server', 'Media')

    db_alias = schema_editor.connection.alias

    def copy_file(file):
        new_file = ContentFile(file.read())
        new_file.name = file.name.split('/')[-1]
        return new_file

    to_delete = set()

    for qs, t in (
        (Audio.objects.using(db_alias).all(), 'a'),
        (Document.objects.using(db_alias).all(), 'd'),
        (Image.objects.using(db_alias).all(), 'i'),
        (Other.objects.using(db_alias).all(), 'x'),
        (Video.objects.using(db_alias).all(), 'v'),
    ):
        for m in qs:
            Media.objects.using(db_alias).create(
                file=copy_file(m.file),
                type=t,
                entry_id=m.entry_id,
                status=0,
                mime_type=m.mime_type,
                exif=m.exif,
                published=m.published,
                license=m.license,
                owner=m.owner,
            )
            to_delete.add(os.path.dirname(m.file.path))

    for d in to_delete:
        shutil.rmtree(d)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('media_server', '0012_auto_20190625_1012'),
    ]

    operations = [
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', general.models.ShortUUIDField(primary_key=True, serialize=False)),
                ('file', models.FileField(storage=media_server.storages.ProtectedFileSystemStorage(), upload_to=media_server.models.user_directory_path)),
                ('type', models.CharField(choices=[('a', 'audio'), ('d', 'document'), ('i', 'image'), ('v', 'video'), ('x', 'other')], default='x', max_length=1)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('entry_id', models.CharField(max_length=22)),
                ('status', models.IntegerField(choices=[(0, 'not converted'), (1, 'in progress'), (2, 'converted'), (3, 'error')], default=0)),
                ('mime_type', models.CharField(blank=True, default='', max_length=255)),
                ('exif', jsonfield.fields.JSONField(default={}, dump_kwargs={'cls': jsonfield.encoder.JSONEncoder, 'separators': (',', ':')}, load_kwargs={})),
                ('published', models.BooleanField(default=False)),
                ('license', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, validators=[media_server.validators.validate_license])),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(forwards_func),
        migrations.RemoveField(
            model_name='document',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='image',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='other',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='video',
            name='owner',
        ),
        migrations.DeleteModel(
            name='Audio',
        ),
        migrations.DeleteModel(
            name='Document',
        ),
        migrations.DeleteModel(
            name='Image',
        ),
        migrations.DeleteModel(
            name='Other',
        ),
        migrations.DeleteModel(
            name='Video',
        ),
        migrations.AddIndex(
            model_name='media',
            index=models.Index(fields=['entry_id'], name='media_serve_entry_i_761824_idx'),
        ),
    ]
